<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://tomreinh.art/feed.xml" rel="self" type="application/atom+xml"/><link href="https://tomreinh.art/" rel="alternate" type="text/html"/><updated>2022-08-16T08:35:09-07:00</updated><id>https://tomreinh.art/feed.xml</id><title type="html">blank</title><subtitle>A simple blog where I chronicle my career journey </subtitle><entry><title type="html">8/16 2022</title><link href="https://tomreinh.art/blog/2022/blog/" rel="alternate" type="text/html" title="8/16 2022"/><published>2022-08-16T01:10:00-07:00</published><updated>2022-08-16T01:10:00-07:00</updated><id>https://tomreinh.art/blog/2022/blog</id><content type="html" xml:base="https://tomreinh.art/blog/2022/blog/"><![CDATA[<h2 id="august-16-2022">August 16, 2022</h2> <p>So happy to be alive today!</p> <p>Flew into Seattle for work last night and was settled into the hotel by around 10pm. Really enjoying a new book that I read on the plane called <a href="https://www.goodreads.com/book/show/45892276-you-re-not-listening">You’re Not Listening: What You’re Missing and Why It Matters</a>. I often find myself interrupting others or waiting for the other person to talk so that I can get in my next word. I would like to beat this habit and learn more about others. I’m about 25% done with the book as it’s a pretty light read. This book reminds me of the quotation attributed to Epictetus.</p> <blockquote> <p>“We have two ears and one mouth so that we can listen twice as much as we speak”</p> </blockquote> <p>Listening is definitely one of my weaknesses, and this book does a great job of not making readers feel isolated by pointing out common themes of bad listeners. I think I can learn a lot from this book, so I’m going to continue to read thoroughly and digest my favorite content.</p> <h4 id="running-lake-union">Running Lake Union</h4> <p>Haven’t been doing much exercise lately, but I was super excited to run Lake Union this morning. I did this run with my best friend at the VERY start of covid when the outbreak was in Seattle only in the US. We had a great run during that trip. Feeling super nostalgic of that time period as that was when I saw the Strokes too. Can’t believe how much time has passed.</p> <div class="strava-embed-placeholder" data-embed-type="activity" data-embed-id="7647336805"></div> <script src="https://strava-embeds.com/embed.js"></script> <h4 id="3sum-smaller">3Sum Smaller</h4> <p>This was a fun problem as I finally get working on a lot of these triplet problems. I still don’t love that most of the problems rely on sorting the list since no matter what you’ll be better of than O(N^3), but that’s OK. This pattern seems to be easy to follow, and I look forward to zipping through a few more of these problems on my Grokking journey.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def threeSumSmaller(self, nums: List[int], target: int) -&gt; int:
    smaller_triplets = 0
    nums.sort()
    for i in range(len(nums)):
        new_target = target - nums[i]
        l, r = i + 1, len(nums) - 1
        while l &lt; r:
            if nums[l] + nums[r] &lt; new_target:
                # The trick is that since r &gt;= l and l + r &lt; target, then any items between l and r also work
                smaller_triplets += r - l
                l += 1
            else:
                r -= 1

    return smaller_triplets
</code></pre></div></div>]]></content><author><name></name></author><category term="leetcode"/><category term="blog"/><category term="leetcode"/><category term="blog"/><summary type="html"><![CDATA[a great day to be in Seattle]]></summary></entry><entry><title type="html">8/5 2022</title><link href="https://tomreinh.art/blog/2022/blog/" rel="alternate" type="text/html" title="8/5 2022"/><published>2022-08-05T02:00:00-07:00</published><updated>2022-08-05T02:00:00-07:00</updated><id>https://tomreinh.art/blog/2022/blog</id><content type="html" xml:base="https://tomreinh.art/blog/2022/blog/"><![CDATA[<h2 id="august-5-2022">August 5, 2022</h2> <p>Out of bed by 5:45! Strong start to the morning by getting some natural sunlight exposure by walking Murph around the neighborhood. I was listening to Tim Ferris with Andrew Huberman about how to get better sleep and sunlight first thing in the morning stuck with me as an easy win.</p> <blockquote> <p>The simple behavior that I do believe everybody should adopt… is to view, ideally sunlight, for 2–10 minutes every morning upon waking. So, when you get up in the morning, you want to get bright light into your eyes because it does two things.</p> </blockquote> <p>I enjoyed my brief sunlight walk and then got home to make some coffee before joining Diana for a study session! TGIF, looking forward to finishing some work today and then relaxing on the weekend</p> <h3 id="leetcode-30---substring-with-concatenation-of-all-words-hard">Leetcode 30 - Substring with Concatenation of All Words (Hard)</h3> <p>I completed my last Sliding Window problem for a while this morning. This was a fun problem to work on, but got tripped up a little bit about the best way to iterate for substrings. I tunnel-visioned a little bit on the idea of needing to keep a <code class="language-plaintext highlighter-rouge">start</code> variable when doing a problem like this, but once I realized the benefits of all words to match having the same length I was able to figure this one out and reproduce it. As usual, I started by keeping a frequency counter for the words I was trying to find in the larger string. By recognizing that there are only so many windows that you can check for in the larger string, the number of iterations becomes the key to solving this problem. I iterated the length of the large string minus the window size (wordLen * wordCount) + 1 to account for the last or first iteration. By keeping track of the <code class="language-plaintext highlighter-rouge">seen</code> words for each substring, this problem was trivial since any non-word substring breaks the iteration, or seeing something too many times breaks the loop. Felt good to finish the problem to start the day.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> def findSubstring(self, s: str, words: List[str]) -&gt; List[int]:
    wordLen = len(words[0])
    wordCount = len(words)
    if wordCount == 0 or wordLen == 0:
        return []
    
    # Keep the frequency of every word in a HashMap
    wordFreq = {}
    for w in words:
        if w not in wordFreq:
            wordFreq[w] = 0
        wordFreq[w] += 1
        

    indices = []
    # Starting from every index in the string, try to match all the words.
    # since we know wordLen, we know how many String chars are needed to be possible
    # example catfoxcat, ["cat", "fox"] the min window is 2 words * 3 wordLen  = 6 chars
    # 9 chars in S, window = 6 chars, so can only iterate 4 times
    # catfox, atfoxc, tfoxca, foxcat
    for i in range((len(s) - wordCount * wordLen) + 1):
        # In each iteration, keep track of all the words that we have already seen in another map.
        seen = {}
        for j in range(wordCount):
            nextWordIndex = i + j * wordLen
            word = s[nextWordIndex:nextWordIndex+wordLen]
            
            # word is not found, move to next char in the string.
            if word not in wordFreq:
                break
                
            if word not in seen:
                seen[word] = 0
            seen[word] += 1
            
            # higher frequency than required, move to next char in string
            if seen[word] &gt; wordFreq[word]:
                break
                
            # Store the start index if we have found all the words.
            if j + 1 == wordCount:
                indices.append(i)
    return indices
</code></pre></div></div>]]></content><author><name></name></author><category term="leetcode"/><category term="blog"/><category term="leetcode"/><category term="blog"/><summary type="html"><![CDATA[workin' for the weekend]]></summary></entry><entry><title type="html">8/4 2022</title><link href="https://tomreinh.art/blog/2022/blog/" rel="alternate" type="text/html" title="8/4 2022"/><published>2022-08-04T11:00:00-07:00</published><updated>2022-08-04T11:00:00-07:00</updated><id>https://tomreinh.art/blog/2022/blog</id><content type="html" xml:base="https://tomreinh.art/blog/2022/blog/"><![CDATA[<h2 id="august-4-2022">August 4, 2022</h2> <p>Today was a pretty busy day. Started with a couple of LC questions below. I can feel my confidence increasing with each question I finish. For the first time in my life, I feel like I can start coding things instead of relying on a whiteboard to even think about the problem. I’ll call that progress. The weather was horrible today with a real feel getting to 107°F. I was happy to get on the treadmill for a solid 5 miles. I don’t feel particularly in shape, so I’m extra proud of finishing. Work was full of meetings, but the highlight of the work day was connecting with a newer member of my previous team to help her figure out some code within the Alexa App. When setting up the meeting, I was sure I had nothing useful to share and that I had forgotten everything, but I was so pleasantly surprised that I still had the knowledge to help. Feels good ;^)</p> <h3 id="run">Run</h3> <div class="strava-embed-placeholder" data-embed-type="activity" data-embed-id="7581630953"></div> <script src="https://strava-embeds.com/embed.js"></script> <h3 id="leetcode-438---find-all-anagrams-in-a-string-medium">Leetcode 438 - Find All Anagrams in a String (Medium)</h3> <p>Feeling confident about these sliding window problems after just speeding right through this solution today in about 5 to 10 minutes. I enjoy this pattern of using a HashMap/Counter to compare two strings for patterns. The lesson here for me is when I see a pattern and I look to do something with strings in O(N) time, assume Sliding Windows. Create a Counter of the pattern then just run through the different windows of the full string. Boom! Easy. Heading into my last two Problem Challenges of the Sliding Window pattern now after this one.</p> <h3 id="leetcode-76---minimum-window-substring-hard">Leetcode 76 - Minimum Window Substring (Hard)</h3> <p>This was a pretty tough question for me which I guess is why it’s Hard. I think the normal pattern fits for sliding windows where I created a HashMap/Counter to keep track of the pattern to look for in the longer string, but I struggled when it came to thinking about how to treat the letters in a string that weren’t part of the pattern that still might be in the min window. After looking at a clear <a href="https://leetcode.com/problems/minimum-window-substring/discuss/226911/Python-two-pointer-sliding-window-with-explanation">solution</a> in the discussion session, I started with the recommendation where I just decrement the count for non-pattern letters so that it becomes negative. This becomes helpful when I start shrinking the window. When shrinking the window (no more missing letters), I continue to increase the frequency counter for useful characters and mark it as missing only once the count becomes positive again. Once a member of my required frequency counter becomes positive again that means that I need to increment the number of missing (required) characters, so therefore I don’t have my valid window anymore.</p> <p>A tough question that I’ll be coming back to, but I take some amount of pride in knowing this was Hard, and I shouldn’t beat myself up too much.</p>]]></content><author><name></name></author><category term="leetcode"/><category term="blog"/><category term="leetcode"/><category term="blog"/><summary type="html"><![CDATA[thursday]]></summary></entry><entry><title type="html">8/3 2022</title><link href="https://tomreinh.art/blog/2022/blog/" rel="alternate" type="text/html" title="8/3 2022"/><published>2022-08-03T03:25:00-07:00</published><updated>2022-08-03T03:25:00-07:00</updated><id>https://tomreinh.art/blog/2022/blog</id><content type="html" xml:base="https://tomreinh.art/blog/2022/blog/"><![CDATA[<h2 id="august-3-2022">August 3, 2022</h2> <p>Slow to wake up this morning after going for a <a href="https://www.strava.com/activities/7569409902">fun run</a> yesterday morning on the Goucher loop I explored on 8/1. Didn’t run very long, but enjoyed jumping over trees and exploring the woods. I think even just this little bit of exercise helped me feel good yesterday (even if it wasn’t terribly ‘work productive’). I made some delicious Korean banchans yesterday thanks to one of my favorite food bloggers, <a href="https://www.koreanbapsang.com/">Korean Bapsang</a>. I made some delicious 깍두기 (kkakdugi) which is cubed radish kimchi and 콩나 (Kongnamul) which is a crunchy soybean sprout side dish. Cooking always makes me feel less stressed. I think cooking feels a bit like adult Legos where I can turn off my brain to the outside world and just follow some instructions for a while to create something fun.</p> <p>Today I’m doing my usual work, taking Murph for a walk in his sushi bandana, and completing my daily Leetcode grind. I hope to make it to bed early today so I can be in shared productive company with Diana tomorrow morning while she studies for <a href="https://www.usmle.org/step-exams/step-3">Step 3</a>.</p> <h3 id="leetcode-567---permutation-in-string-medium">Leetcode 567 - Permutation in String (Medium)</h3> <p>I enjoyed working on this <a href="https://github.com/tbr7/lc/blob/main/567.py">solution</a>. It was a fun problem for me because I enjoy a problem where there are many solutions depending on how much things can be optimized. Since I’m working through Sliding Window patterns, I knew this problem would be some order of O(N) where I shouldn’t waste time. Surprisingly, I’m getting a little better at coding something and hitting “Test”, then seeing it work right away. I know that just using a HashMap or two and doing a Sliding Window isn’t too hard, but it feels good to come up with the solution semi-easily on my own. I would love to do something like this problem in an interview.</p>]]></content><author><name></name></author><category term="leetcode"/><category term="blog"/><category term="leetcode"/><category term="blog"/><summary type="html"><![CDATA[another day in my life of solving puzzles and doing work]]></summary></entry><entry><title type="html">8/1 2022, LC 424</title><link href="https://tomreinh.art/blog/2022/blog/" rel="alternate" type="text/html" title="8/1 2022, LC 424"/><published>2022-08-01T04:00:00-07:00</published><updated>2022-08-01T04:00:00-07:00</updated><id>https://tomreinh.art/blog/2022/blog</id><content type="html" xml:base="https://tomreinh.art/blog/2022/blog/"><![CDATA[<h2 id="august-1-2022">August 1, 2022</h2> <p>On this cool Monday morning, I started the day bright and early at 6 am. I didn’t want to leave bed today, but I got out of bed and onto the couch to do some light fiction reading of Ready Player Two. Not as good as Ready Player One, but I find it still pretty whimsical. I enjoy the escapism of reading compared to where I spend the rest of my independent hobby time (League of Legends). I’ve been playing LoL since late 2017, but lately my girlfriend and I have been noticing it just makes days go by far too fast. Reading is nice because it slows things down.</p> <p>I took an awesome walk with <a href="https://photos.app.goo.gl/17uFzAFJcVkxF6Ws5">Murph</a> today through Goucher college. There’s an awesome 2.5-mile loop that I found on <a href="https://www.alltrails.com/trail/us/maryland/goucher-college-campus-loop">AllTrails</a> today. It was a bit muddy, so we only did a short stint. Murphy got dirty, but at least we avoided ticks today after shaking one out of his fur last week.</p> <h3 id="leetcode-424---longest-repeating-character-replacement-medium">Leetcode 424 - Longest Repeating Character Replacement (Medium)</h3> <p>Today’s problem was another sliding window problem as I work my way through the first pattern of <a href="https://www.educative.io/courses/grokking-the-coding-interview">Grokking the Coding Interview: Patterns for Coding Questions</a>. For me, the hardest part of this question was figuring out how to keep track of the max frequency. I watched a <a href="https://www.youtube.com/watch?v=gqXU1UyA8pk">Neetcode.io YouTube Video</a> explaining his process. I felt stuck when I had a hard time keeping track of the max frequency of characters and I found that discouraging, but I liked the way that he states that you can move forward with a more brute force check of the most frequent character in O(26) aka O(N) time which isn’t all that bad. When I hear something like this, it helps me get unstuck. Eventually, I was able to figure out that I could keep track of the max frequency the whole way along without having to decrement which was helpful.</p> <h3 id="progress">Progress</h3> <p>I didn’t do any LC yesterday, but I’m hoping that as I start to write more and blog I might fall into flow more often and enjoy this process. Ultimately, I know most of this long game is about making things sustainable, so baby steps are important. I’ll consider today a win as I kick off another work day where I hope to get unstuck on CloudFormation/CDK changes.</p>]]></content><author><name></name></author><category term="leetcode"/><category term="leetcode"/><summary type="html"><![CDATA[lc424]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://tomreinh.art/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T16:20:09-07:00</published><updated>2022-04-23T16:20:09-07:00</updated><id>https://tomreinh.art/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://tomreinh.art/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Running Every Single Day in 2020</title><link href="https://tomreinh.art/blog/2020/running-recap/" rel="alternate" type="text/html" title="Running Every Single Day in 2020"/><published>2020-12-31T08:40:16-08:00</published><updated>2020-12-31T08:40:16-08:00</updated><id>https://tomreinh.art/blog/2020/running-recap</id><content type="html" xml:base="https://tomreinh.art/blog/2020/running-recap/"><![CDATA[<h3 id="2020-by-the-numbers">2020 By The Numbers</h3> <ul> <li>3408 Miles (avg 9.31 miles/day)</li> <li>126,731 feet of elevation</li> <li>Highest 7 Day Total: 112 Miles</li> <li>354 Days of Running Solo</li> <li>2:46:00 Marathon</li> <li>401 hours of running</li> <li>62 Runs Started @ 11:56pm or later</li> </ul> <p>Feel so happy accomplishing my goal this year. I know everyone had their battle with 2020, so I’m feeling thankful that my body allowed me to run every day (even if sometimes it was just for a desperate mile shuffle at 11:59 pm). I’m physically and mentally exhausted, but I learned so much is possible if you just set your mind to something and put in a little effort every single day.</p> <div class="strava-embed-placeholder" data-embed-type="activity" data-embed-id="4546229804"></div> <script src="https://strava-embeds.com/embed.js"></script> <p>Some of my family asked me what I’m planning on doing for my goal in 2021, but I think I’m going to try to stay away from streaks as they cause mental and physical strain sometimes. I think I’ll stick to trying to figure out a healthy, balanced workout routine that works for me. I’d like to maybe even develop a healthy sleep schedule! I loved the accountability that Strava provided since I knew people would see if I broke the streak, but I learned about halfway through that I was doing this for myself. Some days I was way too worried about what other people were thinking regarding how far or how fast I ran (even though nobody else would have even noticed). With that said, I’m going to take about a week off of running and a break from Strava until I know I can come back with a healthy attitude where I’m just happy with my exercise regardless of Kudos and views. Thanks so much to one or two people that may get to this point in this post. I really couldn’t have made this goal a reality without the support and cheers from you. Some days I wanted to quit, but I knew my friends and family would be there to cheer me on. Feeling incredibly proud knowing I kicked 2020’s ass and looking forward to 2021 knowing I can handle anything it throws at me. ✌️</p>]]></content><author><name></name></author><category term="running"/><category term="strava"/><summary type="html"><![CDATA[2020 running journey]]></summary></entry></feed>